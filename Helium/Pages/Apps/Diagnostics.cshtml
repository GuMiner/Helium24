@page
@model DiagnosticsModel
@{
    ViewData["Title"] = "Diagnostics";

    string generalError = "generalError";
    string autoUpdateLabel = "autoUpdateLabel";
}


<link href="~/lib/chartist-1.3.0.min.css" rel="stylesheet" />
<style>
    .ct-series-a .ct-point, .ct-series-a .ct-line {
        stroke: lightgreen;
    }

    .ct-series-b .ct-point, .ct-series-b .ct-line {
        stroke: lightsalmon;
    }

    .ct-series-c .ct-point, .ct-series-c .ct-line {
        stroke: lightblue;
    }
</style>

<div class="alert-warning" id="@generalError" role="alert"></div>
<div class="container-fluid">
    <h2>CO<sub>2</sub> ppm</h2>
    <div class="row-auto">
        <div class="col-auto">
            <div id="co2chart" style="height: 400px"></div>
            <div id="tooltipC"></div>
        </div>
    </div>
    
    <h2>Temperature (<sup>o</sup>F)</h2>
    <div class="row-auto">
        <div class="col-auto">
            <div id="tempChart" style="height: 400px"></div>
            <div id="tooltipF"></div>
        </div>
    </div>

    <h2>Air Pressure (hPa)</h2>
    <div class="row-auto">
        <div class="col-auto">
            <div id="pressureChart" style="height: 400px"></div>
            <div id="tooltipP"></div>
        </div>
    </div>

    <div class="row justify-content-between">
        <div class="col-auto">
            <b>Page Loaded:</b> @(DateTime.Now) <br />
            <b>Client Address:</b> @Model.ClientAddress <br />
            <b>Server Address:</b> @Model.ServerAddress <br />
        </div>
    </div>
</div>


@section Scripts{
    <script type="text/javascript" src="~/lib/axios-0.24.0.min.js"></script>
    <script type="text/javascript" src="~/lib/chartist-1.3.0.min.js"></script>


    <!-- Server status script-->
    <script type="text/javascript">
        function renderServerUsageChart() {
            axios.get("/api/AirQuality/MostRecent?sensorId=1&count=144") // Roughly 1 day of data
                .then(function (response) {
                    console.log(response);

                    var co2Data = [];
                    var temperatureData = [];
                    var pressureData = [];
                    for (var i = 0; i < response.data.length; i++)
                    {
                        var pointTime = new Date(response.data[i].timestamp);
                        co2Data[i] = {
                            x: pointTime,
                            y: response.data[i].cO2Ppm };
                        temperatureData[i] = {
                            x: pointTime,
                            y: response.data[i].temperatureC
                        };
                        pressureData[i] = {
                            x: pointTime,
                            y: response.data[i].pressureHPa
                        };
                    }

                    var chart = new Chartist.LineChart(
                        '#co2chart',
                        {
                            series: [
                                { name: 'co2', data: co2Data }
                            ]
                        },
                        {
                            series: {
                                'co2': {
                                    lineSmooth: Chartist.Interpolation.simple(),
                                    showLine: true
                                }
                            },
                            axisX: {
                                type: Chartist.AutoScaleAxis,
                                labelInterpolationFnc: value =>
                                    new Date(value).toLocaleString(undefined, {
                                        month: 'short',
                                        day: 'numeric',
                                        hour: 'numeric',
                                    })
                            },
                            axisY: {
                                type: Chartist.AutoScaleAxis
                            }
                        }
                    );
                    chart.on('created', function (bar) {
                        $('.ct-point').on('mouseover', function () {
                            var pointValue = $(this).attr('ct:value').split(',');
                            $('#tooltipC').html('<b>' + pointValue[0] + ':</b> ' + pointValue[1]);
                        });

                        $('.ct-point').on('mouseout', function () {
                            $('#tooltipC').html('');
                        });
                    });

                    var tChart = new Chartist.LineChart(
                        '#tempChart',
                        {
                            series: [
                                { name: 'unused', data: temperatureData },
                                { name: 'temperature', data: temperatureData }
                            ]
                        },
                        {
                            series: {
                                'unused': {
                                    showLine: false,
                                    showPoint: false
                                },
                                'temperature': {
                                    lineSmooth: Chartist.Interpolation.simple(),
                                    showLine: true
                                }
                            },
                            axisX: {
                                type: Chartist.AutoScaleAxis,
                                labelInterpolationFnc: value =>
                                    new Date(value).toLocaleString(undefined, {
                                        month: 'short',
                                        day: 'numeric',
                                        hour: 'numeric',
                                    })
                            },
                            axisY: {
                                type: Chartist.AutoScaleAxis
                            }
                        }
                    );
                    tChart.on('created', function (bar) {
                        $('.ct-point').on('mouseover', function () {
                            var pointValue = $(this).attr('ct:value').split(',');
                            $('#tooltipF').html('<b>' + pointValue[0] + ':</b> ' + pointValue[1]);
                        });

                        $('.ct-point').on('mouseout', function () {
                            $('#tooltipF').html('');
                        });
                    });

                    var pChart = new Chartist.LineChart(
                        '#pressureChart',
                        {
                            series: [
                                { name: 'unused1', data: pressureData },
                                { name: 'unused2', data: pressureData },
                                { name: 'pressure', data: pressureData }
                            ]
                        },
                        {
                            series: {
                                'unused1': {
                                    showLine: false,
                                    showPoint: false
                                },
                                'unused2': {
                                    showLine: false,
                                    showPoint: false
                                },
                                'pressure': {
                                    lineSmooth: Chartist.Interpolation.simple(),
                                    showLine: true
                                }
                            },
                            axisX: {
                                type: Chartist.AutoScaleAxis,
                                labelInterpolationFnc: value =>
                                    new Date(value).toLocaleString(undefined, {
                                        month: 'short',
                                        day: 'numeric',
                                        hour: 'numeric',
                                    })
                            },
                            axisY: {
                                type: Chartist.AutoScaleAxis
                            }
                        }
                    );

                    pChart.on('created', function (bar) {
                        $('.ct-point').on('mouseover', function () {
                            var pointValue = $(this).attr('ct:value').split(',');
                            $('#tooltipP').html('<b>' + pointValue[0] + ':</b> ' + pointValue[1]);
                        });

                        $('.ct-point').on('mouseout', function () {
                            $('#tooltipP').html('');
                        });
                    });

                }).catch(function (response) {
                    $("#@generalError").text(response.message);
                });
        }

        // Run the scripts.
        $(document).ready(function () {
            renderServerUsageChart();
        });
    </script>
}