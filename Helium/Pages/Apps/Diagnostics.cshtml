@page
@model DiagnosticsModel
@{
    ViewData["Title"] = "Diagnostics";

    string generalError = "generalError";
    string autoUpdateLabel = "autoUpdateLabel";
}


<link href="~/lib/chartist-1.3.0.min.css" rel="stylesheet" />
<!-- <style>
    .ct-series-a .ct-bar, .ct-series-a .ct-line, .ct-series-a .ct-point, .ct-series-a .ct-slice-donut {
        stroke: lightgreen;
    }

    .ct-series-a .ct-area, .ct-series-a .ct-slice-donut-solid, .ct-series-a .ct-slice-pie {
        fill: lightgreen;
    }

    .ct-series-b .ct-bar, .ct-series-b .ct-line, .ct-series-b .ct-point, .ct-series-b .ct-slice-donut {
        stroke: lightblue;
    }

    .ct-series-b .ct-area, .ct-series-b .ct-slice-donut-solid, .ct-series-b .ct-slice-pie {
        fill: lightblue;
    }
    </style>-->

<div class="alert-warning" id="@generalError" role="alert"></div>
<div class="container-fluid">
    <div class="row-auto">
        <div class="col-auto">
            <div id="chart" style="height: 400px"></div>
        </div>
    </div>
    <div class="row justify-content-between">
        <div class="col-auto align-self-center">
            <div class="row py-2">
                <button class="btn disabled" style="background:orange">Chart will auto-update in <span id="@autoUpdateLabel">00:00</span></button>
            </div>
        </div>
        <div class="col-auto">
            <b>Page Loaded:</b> @(DateTime.Now) <br />
            <b>Client Address:</b> @Model.ClientAddress <br />
            <b>Server Address:</b> @Model.ServerAddress <br />
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript" src="~/Lib/axios-0.24.0.min.js"></script>
    <script type="text/javascript" src="~/lib/chartist-1.3.0.min.js"></script>


    <!-- Server status script-->
    <script type="text/javascript">

        // CONSTANTS
        var REFRESH_TIME_SECONDS = 60 * 10;

        // Chart for display.
        var serverUsageChart = null;

        // Runs a live countdown the next time the graph will automatically update.
        var autoUpdateTime = 0;
        function countdownAutoUpdate() {
            --autoUpdateTime;
            if (autoUpdateTime <= 0) {
                autoUpdateTime = REFRESH_TIME_SECONDS;
            }

            var minutes = parseInt(autoUpdateTime / 60);
            var seconds = parseInt(autoUpdateTime - minutes * 60);

            $("#@autoUpdateLabel").text((minutes < 10 ? "0" : "") + minutes + ":" + (seconds < 10 ? "0" : "") + seconds);
        }

        // Updates the server usage chart periodically.
        function updateServerUsageChart() {
            // Update the chart
            axios.get("/api/AirQuality/MostRecent?sensorId=1&count=144") // Roughly 1 day of data
                .then(function (response) {
                    console.log(response);

                    var co2Data = [];
                    var temperatureData = [];
                    for (var i = 0; i < response.data.length; i++)
                    {
                        co2Data[i] = {
                            x: new Date(response.data[i].timestamp),
                            y: response.data[i].cO2Ppm };
                        temperatureData[i] = {
                            x: new Date(response.data[i].timestamp),
                            y: response.data[i].temperatureC
                        };
                    }

                    serverUsageChart.update({ labels: ['co2', 'temperature'], series: [co2Data, temperatureData] });
                }).catch(function (response) {
                    $("#@generalError").text(response.message);
                });
        }

        // Load up the server usage chart and starts the periodic updates.
        function loadServerUsageChart() {
            serverUsageChart = new Chartist.LineChart(
                '#chart',
                {
                    series: [
                        [
                            { x: 1, y: 100 },
                            { x: 2, y: 50 },
                            { x: 3, y: 25 },
                            { x: 5, y: 12.5 },
                            { x: 8, y: 6.25 }
                        ]
                    ]
                },
                {
                    series: {
                        'co2': {
                            lineSmooth: Chartist.Interpolation.step()
                        },
                        'temperature': {
                            lineSmooth: Chartist.Interpolation.simple(),
                            showLine: true
                        }
                    },
                    axisX: {
                        type: Chartist.AutoScaleAxis,
                        labelInterpolationFnc: value =>
                            new Date(value).toLocaleString(undefined, {
                                month: 'short',
                                day: 'numeric',
                                hour: 'numeric',
                            })
                    },
                    axisY: {
                        type: Chartist.AutoScaleAxis
                    }
                }
            );


            // Update every 10 minutes the server usage chart, and every second the countdown.
            updateServerUsageChart();
            setInterval("updateServerUsageChart()", 1000 * REFRESH_TIME_SECONDS);
            setInterval("countdownAutoUpdate()", 1000);
        }

        // Run the scripts.
        $(document).ready(function () {
            loadServerUsageChart();
        });
    </script>
}