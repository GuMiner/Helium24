@page
@using Helium.Pages.Projects.Shared
@model AlgorithmAssistantModel

@{
    ViewData["Title"] = @Model.Card.Title;
}

<div class="container-fluid">
    <partial name="../Shared/CardHeader.cshtml" for="@Model" />
    <div class="card-body">
        <div class="row justify-content-center">
            <h3 class="text-muted">About</h3>
            <div class="col-md-6">
                <b>@Model.Card.Title</b> was a small mobile application to describe, demonstrate, and visualize algorithms.
                <br />
                <br />
                You can download this mobile application -- if you have a Windows Phone -- from the
                <a href="http://www.windowsphone.com/en-us/store/app/algorithm-assistant/67ae99ed-c534-4a48-b3ec-6c274b40db9a">Windows Phone store</a>
            </div>
            <div class="col-auto">
                <partial name="../Shared/ImageCard.cshtml" ,
                    model='@new Image("/img/iot-projects/algorithm-assistant/aa1.png", "A screenshot of the O(n²)<br /> Gnome sort algorithm.")' />
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-6">
                The main algorithms included in the demo program were searching and sorting algorithms,
                with a few miscellaneous physics and math-based algorithms added for additional visualization.
            </div>            
            <div class="col-auto">
                <partial name="../Shared/ImageCard.cshtml" ,
                    model='@new Image("/img/iot-projects/algorithm-assistant/aa2.png", "A visualization of the Julia Set fractal.")' />
            </div>
        </div>
        <h3 class="text-muted">Unique Aspects</h3>
        <div class="row justify-content-center">
            <div class="col-auto">
                This phone application is structured so that once a visualization type is defined, it's very easy to create new algorithms that use the visualization
                type. For example, most of the <b>Sorting</b> visualizations feature a bar-graph sort view. I also tried to polish this to be an 'official' phone application,
                so this application includes support for landscape orientation, includes transition animations, and is partly-localized to additional languages.
            </div>
        </div>
    </div>
</div>