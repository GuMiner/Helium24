@page
@using System.Collections.Generic;
@model SciFiBooks
@{
    ViewData["Title"] = "Science Fiction Book List";

    var AllTimeFavorite = 5;
    var Enjoyable = 4;
    var GoodButNotGreat = 3;

    var InterGalactic = 5;
    var Galactic = 4;
    var SolarSystem = 3;
    var Planetary = 2;

    var SuperDark = 1;
    var Dark = 2;
    var AverageSM = 3;
    var Light = 4;
    var SuperLight = 5;

    var SuperOptimistic = 5;
    var Optimistic = 4;
    var AverageTone = 3;
    var Pessimistic = 2;
    var SuperPessimistic = 1;

    var books = new List<Book>()
    {
        new Book("The Practice Effect", "TODO", DateTime.Parse("2021-01-01"), "Scientist",
            "TODO",
            tone: SuperOptimistic, subjectMatter: SuperLight, scope: Planetary, rating: AllTimeFavorite),

        new Book("Light Chaser", "Peter F. Hamilton/Gareth L. Powell", DateTime.Parse("2021-01-01"), "Pilot",
            "Love story that's also galactic science fiction. Somewhat short.",
            tone: Optimistic, subjectMatter: Light, scope: Galactic, rating: Enjoyable),

        new Book("The Last Watch (Divide Series)", "J. S. Dewes", DateTime.Parse("2021-01-01"), "Military Officer/Scientist",
            "Optimistic military Sci-Fi with a broad scope and humerous moments. The third book isn't yet out though.",
            tone: SuperOptimistic, subjectMatter: AverageSM, scope: InterGalactic, rating: Enjoyable),

        new Book("Shild's Ladder", "Greg Egan", DateTime.Parse("2002-01-01"), "Scientist",
            "Far-future tech with a universe-ending scale.",
            tone: AverageTone, subjectMatter: AverageSM, scope: InterGalactic, rating: GoodButNotGreat),

        new Book("Metaplanetary", "Tony Daniel", DateTime.Parse("2009-01-01"), "Various",
            "Development of war in the local solar system.",
            tone: Optimistic, subjectMatter: SuperDark, scope: SolarSystem, rating: GoodButNotGreat),
    };
}

<partial name="ReferenceHeader.cshtml"/>


<h1>Science Fiction Book List</h1>
<div class="container-fluid">
    <h2>All Time Favorites</h2>
    <p>
    <ul>
    @foreach (Book book in books.Where(b => b.Rating == AllTimeFavorite).OrderByDescending(b => b.Published))
    {
        <partial name="BookEntry.cshtml" model="@book" />
    }
    </ul>
    </p>

    <h2>Enjoyable</h2>
    <p>
    <ul>
    @foreach (Book book in books.Where(b => b.Rating == Enjoyable).OrderByDescending(b => b.Published))
    {
        <partial name="BookEntry.cshtml" model="@book" />
    }
    </ul>
    </p>

    <h2>Good Enough</h2>
    <p>
    <ul>
    @foreach (Book book in books.Where(b => b.Rating == GoodButNotGreat).OrderByDescending(b => b.Published))
    {
        <partial name="BookEntry.cshtml" model="@book" />
    }
    </ul>
    </p>
</div>