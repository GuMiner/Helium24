@using System;
@using H24.Definitions;

@{
    Layout = "SubpageLayout.cshtml";

    // View items and the URLs
    string minDate = "minDate";
    string maxDate = "maxDate";
    string minDateValue = (DateTime.UtcNow - TimeSpan.FromDays(1)).ToString("yyyy-MM-dd hh:mm:ss");
    string maxDateValue = DateTime.UtcNow.ToString("yyyy-MM-dd hh:mm:ss");
    string getHistoricalImages = "getHistoricalImages";
    string deleteButton = "deleteImage";
    string historicalImagesTable = "historicalImages";

    string cameraUpdateRateInSeconds = "cameraUpdateRateInSeconds";
    string cameraRateUpdateButton = "cameraRateUpdateButton";
    string cameraOneImage = "cameraOneImage";
    string cameraTwoImage = "cameraTwoImage";
    string cameraThreeImage = "cameraThreeImage";

    string cameraOneTemp = "cameraOneTemp";
    string cameraOnePower = "cameraOnePower";
    string cameraOneVoltage = "cameraOneVoltage";

    string cameraTwoTemp = "cameraTwoTemp";
    string cameraTwoPower = "cameraTwoPower";
    string cameraTwoVoltage = "cameraTwoVoltage";

    string cameraThreeTemp = "cameraThreeTemp";
    string cameraThreePower = "cameraThreePower";
    string cameraThreeVoltage = "cameraThreeVoltage";

    string urlCameraOne = "/api/Cameras/One";
    string urlCameraTwo = "/api/Cameras/Two";
    string urlCameraThree = "/api/Cameras/Three";
    string urlCameraOneSensors = "/api/Cameras/OneSensors";
    string urlCameraTwoSensors = "/api/Cameras/TwoSensors";
    string urlCameraThreeSensors = "/api/Cameras/ThreeSensors";
    string urlQuery = "/api/Cameras/Query";
    string urlDelete = "/api/Cameras/QueryImage";

    string generalCameraError = "generalCameraError";
}

@section Content{
    <div class="alert-warning" id="@generalCameraError" role="alert"></div>
    <div class="row">
        <div class="col">
            <div class="card" style="width: 40rem;">
                <div class="card-header">Camera I</div>
                <div class="card-body">
                    <img id="@cameraOneImage" width="576" height="432"  alt="Camera I image loading..." />
                </div>
                <div class="card-footer">
                    <div class="row">
                        <div class="col">
                            <span id="@cameraOneTemp"></span> °C / °F <br />
                        </div>
                        <div class="col">
                            <span id="@cameraOnePower"></span> % &#x26A1; <br />
                        </div>
                        <div class="col">
                            <span id="@cameraOneVoltage"></span> V <br />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card" style="width: 40rem;">
                <div class="card-header">Camera II</div>
                <div class="card-body">
                    <img id="@cameraTwoImage" width="576" height="432" alt="Camera II image loading..." />
                </div>
                <div class="card-footer">
                    <div class="row">
                        <div class="col">
                            <span id="@cameraTwoTemp"></span> °C / °F <br />
                        </div>
                        <div class="col">
                            <span id="@cameraTwoPower"></span> % &#x26A1; <br />
                        </div>
                        <div class="col">
                            <span id="@cameraTwoVoltage"></span> V <br />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card" style="width: 40rem;">
                <div class="card-header">Camera III</div>
                <div class="card-body">
                    <img id="@cameraThreeImage" width="576" height="432" alt="Camera III image loading..."/>
                </div>
                <div class="card-footer">
                    <div class="row">
                        <div class="col">
                            <span id="@cameraThreeTemp"></span> °C / °F <br />
                        </div>
                        <div class="col">
                            <span id="@cameraThreePower"></span> % &#x26A1; <br />
                        </div>
                        <div class="col">
                            <span id="@cameraThreeVoltage"></span> V <br />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-header">Settings</div>
                <div class="card-body">
                    <div class="row">
                        <div class="col">
                            <label for="@cameraUpdateRateInSeconds">Time to wait (seconds) between updates:</label>
                            <input id="@cameraUpdateRateInSeconds" type="number" value="600" class="form-control"/>
                        </div>
                        <div class="col align-self-center">
                            <button id="@cameraRateUpdateButton" type="button" class="btn btn-primary">Update Now</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="card">
        <div class="card-header">
            <h5 class="mb-0">
                <button class="btn btn-info" data-toggle="collapse" data-target="#collapsibleBody" aria-expanded="true" aria-controls="collapsibleBody">
                    Archive (Collapsible)
                </button>
            </h5>
        </div>
        <div id="collapsibleBody" class="card-body collapse show">
            <label for="@minDate">Min Archive Date:</label>
            <input id="@minDate" type="text" value="@minDateValue"  class="form-control"/>

            <label for="@maxDate">Max Archive Date:</label>
            <input id="@maxDate" type="text" value="@maxDateValue"  class="form-control"/>
            <button id="@getHistoricalImages" type="button" class="btn btn-secondary">Run Query</button>
            <table id="@historicalImagesTable" class="table">
                <tr>
                    <th>Date</th>
                    <th>Camera ID</th>
                    <th>Image</th>
                    <th>Delete?</th>
                </tr>
            </table>
        </div>
    </div>
}

@section Scripts{
    <script type="text/javascript" src="~/Lib/es6-promise-auto-4.2/es6-promise.auto.min.js"></script>
    <script type="text/javascript" src="~/Lib/axios-0.17/axios.min.js"></script>

    <!-- Show camera-->
    <script type="text/javascript">
            var cameraUpdateTimerId = 0;

            function loadCameraImage(url, imageId) {
                axios({
                    method: 'get',
                    url: url,
                    responseType: 'stream'
                }).then(function(response) {
                    $("#" + imageId).attr("src", "data:image/jpeg;base64," + response.data);
                }).catch(function(response) {
                    $("#@generalCameraError").text("Error loading camera image ID " + imageId + ": " + response);
                });
            }

            function loadCameraStats(url, temp, power, voltage) {
                axios.get(url)
                    .then(function (response) {
                    var data = JSON.parse(response.data);

                    var batteryTempC = data.battery_temp.data[0][1][0];
                    var batteryTempF = batteryTempC * (9.0 / 5.0) + 32;

                    // Loads the camera status for temp, power, and voltage.
                    $("#" + temp).text(batteryTempC.toFixed(2) + " / " + batteryTempF.toFixed(2));
                    $("#" + power).text(data.battery_level.data[0][1]);
                    $("#" + voltage).text(data.battery_voltage.data[0][1]);
                }).catch(function (data) {
                        $("#" + temp).text(data.responseText);
                    }).catch(function (response) {
                        $("#@generalCameraError").text("Error loading camera stats from " + url + ": " + response);
                    });
            }

            function loadCameraImagesAndStats() {
                loadCameraImage("@urlCameraOne", "@cameraOneImage");
                loadCameraImage("@urlCameraTwo", "@cameraTwoImage");
                loadCameraImage("@urlCameraThree", "@cameraThreeImage");

                loadCameraStats("@urlCameraOneSensors", "@cameraOneTemp", "@cameraOnePower", "@cameraOneVoltage");
                loadCameraStats("@urlCameraTwoSensors", "@cameraTwoTemp", "@cameraTwoPower", "@cameraTwoVoltage");
                loadCameraStats("@urlCameraThreeSensors", "@cameraThreeTemp", "@cameraThreePower", "@cameraThreeVoltage");
            }

            function startCameraSequence() {
                loadCameraImagesAndStats();
                cameraUpdateTimerId = setInterval("loadCameraImagesAndStats()", 1000 * $("#@cameraUpdateRateInSeconds").val());
            }

            $("#@cameraRateUpdateButton").click(function () {
                clearInterval(cameraUpdateTimerId);
                startCameraSequence();
            });

            $("body").on('click', '.@deleteButton', function () {
                var rowId = $(this).attr('data-rowid');
                var encapsulatedDate =
                {
                    CaptureTime: $(this).attr('data-imageid')
                };

                axios({ method: 'delete', url: '@urlDelete', data: encapsulatedDate })
                    .then(function (data) {
                        // Remove the image that we deleted from the UI
                        $("#" + rowId).remove();
                    }).catch(function (data) {
                        $("#@generalCameraError").text("Error deleting camera image from row " + rowId + ": " + response);
                    });
            });

            $("#@getHistoricalImages").click(function () {
                var dateRange =
                {
                    MinDateTime: $("#@minDate").val(),
                    MaxDateTime: $("#@maxDate").val()
                };

                axios
                    .post('@urlQuery', dateRange)
                    .then(function (response) {
                        var data = response.data;
                        // Clear our existing results
                        $("#@historicalImagesTable").find("tr:gt(0)").remove();
                        var prefix = "<td style=\"border-left: 1px dashed; border-top: 1px dashed;\">";
                        var postfix = "</td>";
                        for (var i = 0; i < data.length; i++) {
                            var date = prefix + data[i].date + postfix;
                            var cameraId = prefix + data[i].cameraId + postfix;
                            var image = prefix + "<img src=\"data:image/jpeg;base64," + data[i].image + "\"  width=\"576\" height=\"432\" />" + postfix;
                            var deleteButton = prefix + "<button class=\"@deleteButton btn btn-secondary\" type=\"button\" data-imageid=\"" + data[i].date + "\" data-rowid=\"histTableRow" + (i + 1) + "\">Delete</button>" + postfix;
                            $("#@historicalImagesTable tr:last").after("<tr id=\"histTableRow" + (i + 1) + "\">" +
                                date + cameraId + image + deleteButton + "</tr>");
                        }
                    })
                    .catch(function (data) {
                        $("#@generalCameraError").text("Error getting camera images in date range: " + response);
                    });
            });

            $(document).ready(function () {
                startCameraSequence();
            });
    </script>
}
