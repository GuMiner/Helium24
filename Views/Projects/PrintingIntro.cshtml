@{
    String appName = "3D Printing Introduction";
    Layout = "Layouts/RootLayout.cshtml";
}

@section Title {@appName}

@section StyleSheets {
    <link rel="stylesheet" href="~/Content/ProjectStyles.css">
}

<div id="body">
    
    <h2>@appName</h2>
    <h3>Introduction</h3>
    <p>
        I bought a Printrbot JR 3D printer back in 2013, when the wooden model was still
        being sold (v1). Since then, I've been able to fine-tune the printer to reliably print with 0.3 mm
        layer heights, and when pressed, print at 0.1 mm. Over the past year, I've performed minor updates,
        mainly replacing the printbed (first to acrylic (which melted), then to 4130 steel), and updating the firmware.
    </p>
    <p>
        Three years later, the Printerbot is still operational -- but the 4130 steel sheet isn't sufficiently flat, the hotend wobbles 
        alarmingly at higher speeds (and tends to knock off small struts), and the printfeed jams if the plastic isn't manually unwound every few minutes.
        <br />
        <br />
        On the other hand, I can still reliably print with the Printrbot, as I know the limitations of my device.
    </p>
    <div class="content-wrapper">
        <article>
            <img class="imgScaler" src="~/Content/Projects/PrintingIntro/printer_now.jpg"/>
        </article>
        <aside class="asideFloater">
            <b>Print Settings:</b>
            <table border="1">
                <tr>
                    <th>Parameter</th> <th>Setting </th> <th>Units </th>
                </tr>
                <tr>
                    <td>Heater Temp</td> <td>196-200</td> <td><sup>O</sup>C</td>
                </tr>
                <tr>
                    <td>Perimeter Speed </td> <td>60 </td> <td>mm/s </td>
                </tr>
                <tr>
                    <td>Small Perimeter Speed </td> <td>60 </td> <td>mm/s </td>
                </tr>
                <tr>
                    <td>Infill Speed </td> <td>80 </td> <td>mm/s </td>
                </tr>
                <tr>
                    <td>Support Speed</td> <td>90 </td> <td>mm/s </td>
                </tr>
                <tr>
                    <td>Bridges Speed </td> <td>90 </td> <td>mm/s </td>
                </tr>
                <tr>
                    <td>Gap Speed </td> <td>30 </td> <td>mm/s </td>
                </tr>
                <tr>
                    <td>Travel Speed </td> <td>130 </td> <td>mm/s </td>
                </tr>
            </table>
        </aside>
    </div>
    <h3>Design Process</h3>
    <p>
        For extremely-detailed CSG designs, I use a Python interface to script with BRL-CAD, which provides me with a high-speed CSG system along with
        a programmatic design interface. If pressed for time, I'll use OpenSCAD, which is less forgiving of CSG missteps.
        <br />
        <br />
        However, I've experimented with quite a lot of 3D software, including high-end professional software through my alma mater as well as 
        free open-source software.
    </p>
    <div class="content-wrapper">
        <article>
            <img class="imgScaler" src="~/Content/Projects/PrintingIntro/3dp_parts.jpg" width="500" />
            <br />
            <img class="imgScaler" src="~/Content/Projects/PrintingIntro/printer_then.jpg" width="500" />
        </article>
        <projectAside>
            <i><b>Left:</b> Assembly photos of the 3D printer.</i>
            <br /> <br />
            <h4>Professional</h4>
            <p>
                <a href="http://www.autodesk.com/products/inventor/overview">Autodesk Inventor</a> / 
                <a href="http://www.solidworks.com/">Solidworks</a>: 
                Both of these tools are high-end professional design tools. The design process consists of drawing 2D shapes, 
                adding dimensions to constrain the shape, and extruding / rotating / otherwise transforming the 2D shapes into 3D objects.
                I used Inventor in high school design courses, and Solidworks throughout the university. They both are <i>very</i> expensive. 
            </p>
            <p>
                <a href="http://www.blender.org/">Blender</a>: An open-source program with an immense learning curve. Although very powerful, the design
                process is focused more towards artists, with individual triangle manipulation, and less towards the engineer (not easy to use numeric constraints).
            </p>
            <p>
                <a href="http://brlcad.org/">BRL-CAD</a>: An open-source program originally designed for use in the US Army. The design process is based upon 
                constructive solid geometry (<a href="http://en.wikipedia.org/wiki/Constructive_solid_geometry">CSG</a>) modeling, with the user specifying 
                combinations of generic shapes that are combined to form more complex shapes. This program has a worse user interface than Blender, but a much smaller learning curve.
            </p>
        </projectAside>
    </div>
    <div class="content-wrapper">
        <article>
            <img class="imgScaler" src="~/Content/Projects/PrintingIntro/wire_base.png" />
            <img class="imgScaler" src="~/Content/Projects/PrintingIntro/render_base.png" />
            <br />
            <img class="imgScaler" src="~/Content/Projects/PrintingIntro/wire_lid.png" />
            <img class="imgScaler" src="~/Content/Projects/PrintingIntro/render_lid.png" />
            <br />
            <img class="imgScaler" src="~/Content/Projects/PrintingIntro/wire_tube.png" />
            <img class="imgScaler" src="~/Content/Projects/PrintingIntro/render_tube.png" />
        </article>
        <minimalAside>
            <i><b>Left:</b> Several views from BRL-CAD of my Geiger-counter case.</i>
            <br /> <br />
            <h4>Hobbyist</h4>
            <p>
                <a href="http://www.openscad.org/">OpenSCAD</a>: An open-source programmer's 3D modeling tool, which is based upon scripting CSG. This is one of the easiest
                ways to get started with 3D modeling (for programmers), but is <i>really</i> slow at exporting the final results to 
                printable <a href="http://en.wikipedia.org/wiki/STL_(file_format)">STL</a> files.
            </p>
            <p>
                <a href="http://www.wings3d.com">Wings3D</a>: Another open-source application, Wings3D provides most of the functionality of Blender, 
                with a much simpler user interface. However, just like blender, it's focused towards artists and not engineers.
            </p>
            <p>
                <a href="http://www.123dapp.com/design">Autodesk 123D Design</a> / 
                <a href="http://www.designspark.com/eng/page/mechanical">Design Spark Mechanical</a>: These are both free design applications that are
                similar to Solidworks and Inventor. However, they're both substantially slower and less powerful, enough to not be useful for my needs.
            </p>
        </minimalAside>
    </div>
    <h3>Printing Process</h3>
    <p>
        To print the 3D models I create, I export them as .STL files and then import them into 
        <a href="http://www.repetier.com/documentation/repetier-host/">Repetier-Host</a> or <a href="http://www.mattercontrol.com/">Matter Control</a>.
        Both programs include a slcer, which converts the 3D model into layers so that the printer can create the models. 
        These applications handle:
    </p>
    <ul>
        <li>Communication with the 3D printer</li>
        <li>3D object placement on the printbed</li>
        <li>Viewing of the expected print results, current print step, and current printer settings (hotend temperature, positioning, etc.)</li>
    </ul>
    <p>
        Printing itself consists of leveling the print bed (if necessary), ensuring the print adheres to the bed and starts initial layout successfully,
        and then periodically checking the printer as the print is completed.
    </p>
</div>